buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mod_version}-${mod_phase}"
group = 'cloud.lemonslice.intercourse'
archivesBaseName = 'Intercourse'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}"

//    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'info'

            mods {
                intercourse {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'info'

            mods {
                intercourse {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'info'

            args '--mod', 'intercourse', '--all', '--output', file('src/generated/resources/')

            mods {
                intercourse {
                    source sourceSets.main
                }
            }
        }
    }
}

def info = [
        "Specification-Title": "Intercourse",
        "Specification-Vendor": "Lemon Slice Studio",
        "Specification-Version": "1",
        "Implementation-Title": project.name,
        "Implementation-Version": "${version}",
        "Implementation-Vendor" :"Lemon Slice Studio",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
]

repositories {
    maven {
        name = "silveroak"
        url = "https://maven.lemonslice.cloud/releases"
    }
    maven {
        url 'https://www.dogforce-games.com/maven/'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compile fg.deobf("cloud.lemonslice.silveroak:SilveroakOutpost-Forge-1.16.5:0.3.5-Beta")
}

jar {
    manifest {
        attributes(info)
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

//publishing {
//    publications {
//        release(MavenPublication) {
//            groupId = "cloud.lemonslice.intercourse"
//            artifactId = "Intercourse-Forge-${minecraft_version}"
//
//            artifact reobfArtifact
//            pom {
//                name = 'Intercourse for Minecraft 1.16.5'
//                description = 'A Minecraft mod.'
//                url = 'https://github.com/lemon-slice-studio/Intercourse'
//                licenses {
//                    license {
//                        name = 'BSD-3-Clause'
//                        url = 'https://github.com/lemon-slice-studio/Intercourse/blob/1.16/LICENSE'
//                    }
//                }
//                developers {
//                    developer {
//                        id = 'RoitoLeo'
//                        name = 'RoitoLeo'
//                    }
//                }
//                issueManagement {
//                    system = 'GitHub Issues'
//                    url = 'https://github.com/lemon-slice-studio/Intercourse/issues'
//                }
//                scm {
//                    url = 'https://github.com/lemon-slice-studio/Intercourse'
//                    connection = 'scm:git:git://github.com/lemon-slice-studio/Intercourse.git'
//                    developerConnection = 'scm:git:git@github.com:lemon-slice-studio/Intercourse.git'
//                }
//            }
//        }
//    }
//    repositories {
//        maven {
//            name = "archive"
//            url = "https://maven.lemonslice.cloud/releases"
//            credentials {
//                username = System.env.MAVEN_USERNAME
//                password = System.env.MAVEN_PASSWORD
//            }
//        }
//    }
//}
//
//tasks.withType(PublishToMavenRepository) {
//    onlyIf {
//        System.env.MAVEN_USERNAME && System.env.MAVEN_PASSWORD
//    }
//}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}